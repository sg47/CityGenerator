#pragma once
#include <map>

using namespace std;

enum CityParam {
	QUERY_DIST, SNAP_THRESHOLD, FINAL_SNAP_THRESHOLD, ROAD_LENGTH_MAJOR, 
	ROAD_LENGTH_MINOR, ROAD_LENGTH_HIGHWAY, ROAD_LENGTH_JITTER, 
	EVAL_DELAY_HIGHWAY, EVAL_DELAY_MAJOR, EVAL_DELAY_MINOR, 
	CUTOFF_HIGHWAY_GROWTH, HIGHWAY_BRANCH_DELAY, NUM_HIGHWAY_PROBES, ANGLE_HIGHWAY_PROBES, 
	HIGHWAY_PROBE_JITTER, WEIGHT_TERRAIN_CONTOUR, WEIGHT_TERRAIN_CONTOUR_JITTER,
	WEIGHT_TERRAIN_GRADIENT, WEIGHT_TERRAIN_GRADIENT_JITTER,
	HIGHWAY_PROMOTION_PROBABILITY, GRID_DEVIATION_PROBABILITY, GRID_DEVIATION_AMOUNT, 
	SIDE_ROAD_PROBABILITY, COST_THRESHOLD, COST_THRESHOLD_JITTER, 
	COST_INTERSECTION_OVERLOAD, COST_ROAD_SHORTENING, COST_ROAD_LENGTHENING, 
	BONUS_INTERSECTION_UNDERLOAD,

	LOT_EDGE_MAX_WIDTH, LOT_MIN_AREA, LOT_SPLIT_DEVIANCE,

	BUILDING_MAX_HEIGHT
};

class InputParser {
public:
	map<CityParam,double> params;
	InputParser(void);
	~InputParser(void);
	InputParser(char* fileName);
	void parseFile(char* fileName);
	double get(CityParam arg);
	void parse(char* fileName);
	bool parseLine(char* line);
};

